//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Nvblox
{
    [Serializable]
    public class MeshBlockMsg : Message
    {
        public const string k_RosMessageName = "nvblox_msgs/MeshBlock";
        public override string RosMessageName => k_RosMessageName;

        //  All of the constituent parts must either have the same length or be length 0.
        public Geometry.Point32Msg[] vertices;
        public Geometry.Point32Msg[] normals;
        public Std.ColorRGBAMsg[] colors;
        public int[] triangles;

        public MeshBlockMsg()
        {
            this.vertices = new Geometry.Point32Msg[0];
            this.normals = new Geometry.Point32Msg[0];
            this.colors = new Std.ColorRGBAMsg[0];
            this.triangles = new int[0];
        }

        public MeshBlockMsg(Geometry.Point32Msg[] vertices, Geometry.Point32Msg[] normals, Std.ColorRGBAMsg[] colors, int[] triangles)
        {
            this.vertices = vertices;
            this.normals = normals;
            this.colors = colors;
            this.triangles = triangles;
        }

        public static MeshBlockMsg Deserialize(MessageDeserializer deserializer) => new MeshBlockMsg(deserializer);

        private MeshBlockMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.vertices, Geometry.Point32Msg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.normals, Geometry.Point32Msg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.colors, Std.ColorRGBAMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.triangles, sizeof(int), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.vertices);
            serializer.Write(this.vertices);
            serializer.WriteLength(this.normals);
            serializer.Write(this.normals);
            serializer.WriteLength(this.colors);
            serializer.Write(this.colors);
            serializer.WriteLength(this.triangles);
            serializer.Write(this.triangles);
        }

        public override string ToString()
        {
            return "MeshBlockMsg: " +
            "\nvertices: " + System.String.Join(", ", vertices.ToList()) +
            "\nnormals: " + System.String.Join(", ", normals.ToList()) +
            "\ncolors: " + System.String.Join(", ", colors.ToList()) +
            "\ntriangles: " + System.String.Join(", ", triangles.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
